apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

def mainClassName = "whelk.export.marc.MarcCliExport"

repositories {
    mavenCentral()
}

// Don't blame me for this TRAVESTY. It is a necessity because of the versioning of xml-apis (2.0.2 which gradle otherwise chooses is OLDER (and broken) despite the version.)
configurations.all {
    resolutionStrategy {
        force "xml-apis:xml-apis:1.4.01"
    }
}

dependencies {
    // XL dependencies
    implementation(project(':whelk-core'))
    implementation(project(':server-common'))

    // Groovy
    implementation "org.codehaus.groovy:groovy:${groovyVersion}"

    // Servlet
    api "jakarta.servlet:jakarta.servlet-api:${servletApiVersion}"
    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-rewrite:${jettyVersion}"
    implementation "org.eclipse.jetty.ee8:jetty-ee8-servlet:${jettyVersion}"

    // Logging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"

    // metrics
    implementation "io.prometheus:simpleclient:${prometheusVersion}"
    implementation "io.prometheus:simpleclient_servlet:${prometheusVersion}"

    // Tools
    implementation group: 'xml-apis', name: 'xml-apis', version: '1.4.01'
    implementation 'org.apache.commons:commons-lang3:3.3.2'

    // Dependencies inherited from classic libris, due to profile handling
    implementation group: 'com.ibm.icu', name: 'icu4j', version: '4.8.1.1'
    implementation(group: 'org.dspace', name: 'xoai', version: '3.2.10') {
        exclude group: 'org.mockito'
        exclude group: 'org.hamcrest'
        exclude group: 'junit'
        exclude group: 'com.lyncode', module: 'test-support'
        // org.w3c.dom.UserDataHandler scanned from multiple locations: xml-apis, jaxen
        exclude group: 'jaxen', module: 'jaxen'
    }

}

shadowJar {
    archiveClassifier = null // removes `-all` in the filename of the created .jar
}

jar {
    dependsOn ':server-common:jar'
    dependsOn(shadowJar)

    manifest {
        attributes "Main-Class": mainClassName,
                // log4j uses multi-release to ship different stack walking implementations for different java
                // versions. Since we repackage everything as a fat jar, that jar must also be multi-release.
                "Multi-Release": true
    }

    archiveClassifier = "nonfat"
}

task(appRun, dependsOn: "classes", type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass = mainClassName
    minHeapSize = "1g"
    maxHeapSize = "4g"
    systemProperties(
            'xl.secret.properties': System.getProperty("xl.secret.properties"),
            'xl.logRoot': System.getProperty("xl.logRoot", "./logs"),
            'xl.http.port': System.getProperty("xl.http.port", "8183")
    )
    args(System.getProperty("args", "--server").split() as String[])

    debugOptions {
        enabled = true
        port = 5008
        server = true
        suspend = false
    }
}
